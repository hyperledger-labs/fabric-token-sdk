name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      fsc-version:
        default: 'github.com/hyperledger-labs/fabric-smart-client@main'
        required: true
        description: 'FSC dependency'

env:
  FTS_PATH: "${{ github.workspace }}/fabric-token-sdk"
  GOFLAGS: -mod=mod

jobs:

  checks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: ${{ env.FTS_PATH }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "${{ env.FTS_PATH }}/go.mod"

      - name: Replace FSC dep
        working-directory: ${{ env.FTS_PATH }}
        run: |
          if [ -n "${{ github.event.inputs.fsc-version }}" ]; then
            echo "Replace FSC dependency"
            go mod edit -replace=github.com/hyperledger-labs/fabric-smart-client=${{ github.event.inputs.fsc-version }}
            go mod tidy || true
          else
            echo "Skipping FSC dependency replacement"
          fi

      - name: Set up tools
        working-directory: ${{ env.FTS_PATH }}
        run: make install-tools

      - name: Run checks
        working-directory: ${{ env.FTS_PATH }}
        run: make checks

  utest:
    needs: checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tests: [unit-tests, unit-tests-race]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: ${{ env.FTS_PATH }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "${{ env.FTS_PATH }}/go.mod"

      - name: Set up tools
        working-directory: ${{ env.FTS_PATH }}
        run: make install-tools

      - name: Run ${{ matrix.tests }}
        working-directory: ${{ env.FTS_PATH }}
        run: make ${{ matrix.tests }}

  itest:
    needs: checks
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        tests: [
          dlog-fabric-t1,
          dlog-fabric-t2,
          dlog-fabric-t3,
          dlog-fabric-t4,
          dlog-fabric-t5,
          dlog-fabric-t6,
          dlog-fabric-t7,
          dlog-fabric-t8,
          dlog-fabric-t9,
          fabtoken-dlog-fabric,
          dloghsm-fabric-t1,
          dloghsm-fabric-t2,
          fabtoken-fabric-t1,
          fabtoken-fabric-t2,
          fabtoken-fabric-t3,
          fabtoken-fabric-t4,
          fabtoken-fabric-t5,
          dlog-orion,
          fabtoken-orion,
          nft-dlog,
          nft-fabtoken,
          nft-dlog-orion,
          nft-fabtoken-orion,
          dvp-fabtoken,
          dvp-dlog,
          interop-fabtoken-t1,
          interop-fabtoken-t2,
          interop-fabtoken-t3,
          interop-fabtoken-t4,
          interop-fabtoken-t5,
          interop-fabtoken-t6,
          interop-dlog-t1,
          interop-dlog-t2,
          interop-dlog-t3,
          interop-dlog-t4,
          interop-dlog-t5,
          interop-dlog-t6,
          dlogstress-t1,
        ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: ${{ env.FTS_PATH }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "${{ env.FTS_PATH }}/go.mod"

      - name: Set up tools
        working-directory: ${{ env.FTS_PATH }}
        run: make install-tools

      - name: Download fabric binaries
        working-directory: ${{ env.FTS_PATH }}
        run: make download-fabric

      - name: Docker
        working-directory: ${{ env.FTS_PATH }}
        run: make docker-images

      - name: Run ${{ matrix.tests }}
        working-directory: ${{ env.FTS_PATH }}
        run: make integration-tests-${{ matrix.tests }}
