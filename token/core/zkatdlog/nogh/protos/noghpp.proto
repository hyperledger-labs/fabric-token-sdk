/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

package nogh;

import "noghmath.proto";

option go_package = "github.com/hyperledger-labs/fabric-token-sdk/token/core/zkatdlog/nogh/protos-go/pp";

message Identity {
  bytes raw = 1;
}

message IdemixIssuerPublicKey {
  bytes public_key = 1;
    CurveID curver_id = 2;
}

message RangeProofParams {
  repeated G1 left_generators = 1;
  repeated G1 right_generators = 2;
  G1 P = 3;
  G1 Q = 4;
  uint64 bit_length = 5;
  uint64 number_of_rounds = 6;
}

// PublicParameters describes typed public parameters
message PublicParameters {
  string identifier = 1; // the identifier of the public parameters
  uint64 version = 2; // the version of these public params
  CurveID curve_id = 3; // the pairing-friendly elliptic curve used for everything but Idemix.
  repeated G1 pedersen_generators = 4; // contains the public parameters for the Pedersen commitment scheme.
  RangeProofParams range_proof_params = 5; // contains the public parameters for the range proof scheme.
  repeated IdemixIssuerPublicKey idemix_issuer_public_keys = 6; // contains the idemix issuer public keys. Wallets should prefer the use of keys valid under the public key whose index in the array is the smallest.
  Identity auditor = 7; // is the public key of the auditor.
  repeated Identity issuers = 8; // is a list of public keys of the entities that can issue tokens.
  uint64 max_token = 9; // is the maximum quantity a token can hold
  uint64 quantity_precision = 10; // is the precision used to represent quantities
}