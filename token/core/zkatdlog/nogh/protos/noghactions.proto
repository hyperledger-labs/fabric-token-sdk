/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

package nogh;

import "noghmath.proto";
import "ftactions.proto";
import "noghpp.proto";

option go_package = "github.com/hyperledger-labs/fabric-token-sdk/token/core/zkatdlog/nogh/protos-go/actions";

message Token {
  bytes owner = 1; // Owner is the owner of the token
  G1 data = 2; // Data is the Pedersen commitment to type and value
}

message TokenMetadata {
  string type = 1; // Type is the type of the token
  Zr value = 2; // Value is the quantity of the token
  Zr blinding_factor = 3; // BlindingFactor is the blinding factor used to commit type and value
  Identity issuer = 4; // Issuer is the issuer of the token, if defined
}

message TokenID {
    string id = 1;
    uint64 index = 2;
}

message TransferActionInput {
  TokenID token_id = 1;
  Token input = 2;
  TransferActionInputUpgradeWitness upgrade_witness = 3;
}

message TransferActionInputUpgradeWitness {
  fabtoken.Token output = 1;
   Zr blinding_factor = 2;
}

message TransferActionOutput {
  Token token = 1; // Token is the new token
}

message Proof {
  bytes proof = 1;
}

message TransferAction {
  repeated TransferActionInput inputs = 1; // inputs
  repeated TransferActionOutput outputs = 2; // outputs
  Proof proof = 3; // ZK Proof that shows that the transfer is correct
  map<string, bytes> metadata = 4; // Metadata contains the transfer action's metadata
}

message IssueActionInput {
  TokenID id = 1; // is the token id of the token to be redeemed
  bytes token = 2; // is the actual token to be redeemed
}

message IssueActionOutput {
  Token token = 1; // is the newly issued token
}

message IssueAction {
  Identity issuer = 1; // is the identity of issuer
  repeated IssueActionInput inputs = 2; // are the tokens to be redeemed by this issue action
  repeated IssueActionOutput outputs = 3; // are the newly issued tokens
  Proof proof = 4; // carries the ZKP of IssueAction validity
  map<string, bytes> metadata = 5; // Metadata of the issue action
}