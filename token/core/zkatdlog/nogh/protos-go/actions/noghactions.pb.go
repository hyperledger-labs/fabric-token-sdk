//
//Copyright IBM Corp. All Rights Reserved.
//
//SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.1
// source: noghactions.proto

package actions

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	actions "github.com/hyperledger-labs/fabric-token-sdk/token/core/fabtoken/protos-go/actions"
	math "github.com/hyperledger-labs/fabric-token-sdk/token/core/zkatdlog/nogh/protos-go/math"
	pp "github.com/hyperledger-labs/fabric-token-sdk/token/core/zkatdlog/nogh/protos-go/pp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Token struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Owner         []byte                 `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"` // Owner is the owner of the token
	Data          *math.G1               `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`   // Data is the Pedersen commitment to type and value
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Token) Reset() {
	*x = Token{}
	mi := &file_noghactions_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_noghactions_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_noghactions_proto_rawDescGZIP(), []int{0}
}

func (x *Token) GetOwner() []byte {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *Token) GetData() *math.G1 {
	if x != nil {
		return x.Data
	}
	return nil
}

type TokenMetadata struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Type           string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`                                           // Type is the type of the token
	Value          *math.Zr               `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`                                         // Value is the quantity of the token
	BlindingFactor *math.Zr               `protobuf:"bytes,3,opt,name=blinding_factor,json=blindingFactor,proto3" json:"blinding_factor,omitempty"` // BlindingFactor is the blinding factor used to commit type and value
	Issuer         *pp.Identity           `protobuf:"bytes,4,opt,name=issuer,proto3" json:"issuer,omitempty"`                                       // Issuer is the issuer of the token, if defined
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TokenMetadata) Reset() {
	*x = TokenMetadata{}
	mi := &file_noghactions_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenMetadata) ProtoMessage() {}

func (x *TokenMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_noghactions_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenMetadata.ProtoReflect.Descriptor instead.
func (*TokenMetadata) Descriptor() ([]byte, []int) {
	return file_noghactions_proto_rawDescGZIP(), []int{1}
}

func (x *TokenMetadata) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TokenMetadata) GetValue() *math.Zr {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *TokenMetadata) GetBlindingFactor() *math.Zr {
	if x != nil {
		return x.BlindingFactor
	}
	return nil
}

func (x *TokenMetadata) GetIssuer() *pp.Identity {
	if x != nil {
		return x.Issuer
	}
	return nil
}

type TokenID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Index         uint64                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenID) Reset() {
	*x = TokenID{}
	mi := &file_noghactions_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenID) ProtoMessage() {}

func (x *TokenID) ProtoReflect() protoreflect.Message {
	mi := &file_noghactions_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenID.ProtoReflect.Descriptor instead.
func (*TokenID) Descriptor() ([]byte, []int) {
	return file_noghactions_proto_rawDescGZIP(), []int{2}
}

func (x *TokenID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TokenID) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type TransferActionInput struct {
	state          protoimpl.MessageState             `protogen:"open.v1"`
	TokenId        *TokenID                           `protobuf:"bytes,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Input          *Token                             `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
	UpgradeWitness *TransferActionInputUpgradeWitness `protobuf:"bytes,3,opt,name=upgrade_witness,json=upgradeWitness,proto3" json:"upgrade_witness,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TransferActionInput) Reset() {
	*x = TransferActionInput{}
	mi := &file_noghactions_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferActionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferActionInput) ProtoMessage() {}

func (x *TransferActionInput) ProtoReflect() protoreflect.Message {
	mi := &file_noghactions_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferActionInput.ProtoReflect.Descriptor instead.
func (*TransferActionInput) Descriptor() ([]byte, []int) {
	return file_noghactions_proto_rawDescGZIP(), []int{3}
}

func (x *TransferActionInput) GetTokenId() *TokenID {
	if x != nil {
		return x.TokenId
	}
	return nil
}

func (x *TransferActionInput) GetInput() *Token {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *TransferActionInput) GetUpgradeWitness() *TransferActionInputUpgradeWitness {
	if x != nil {
		return x.UpgradeWitness
	}
	return nil
}

type TransferActionInputUpgradeWitness struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Output         *actions.Token         `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	BlindingFactor *math.Zr               `protobuf:"bytes,2,opt,name=blinding_factor,json=blindingFactor,proto3" json:"blinding_factor,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TransferActionInputUpgradeWitness) Reset() {
	*x = TransferActionInputUpgradeWitness{}
	mi := &file_noghactions_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferActionInputUpgradeWitness) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferActionInputUpgradeWitness) ProtoMessage() {}

func (x *TransferActionInputUpgradeWitness) ProtoReflect() protoreflect.Message {
	mi := &file_noghactions_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferActionInputUpgradeWitness.ProtoReflect.Descriptor instead.
func (*TransferActionInputUpgradeWitness) Descriptor() ([]byte, []int) {
	return file_noghactions_proto_rawDescGZIP(), []int{4}
}

func (x *TransferActionInputUpgradeWitness) GetOutput() *actions.Token {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *TransferActionInputUpgradeWitness) GetBlindingFactor() *math.Zr {
	if x != nil {
		return x.BlindingFactor
	}
	return nil
}

type TransferActionOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         *Token                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` // Token is the new token
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferActionOutput) Reset() {
	*x = TransferActionOutput{}
	mi := &file_noghactions_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferActionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferActionOutput) ProtoMessage() {}

func (x *TransferActionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_noghactions_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferActionOutput.ProtoReflect.Descriptor instead.
func (*TransferActionOutput) Descriptor() ([]byte, []int) {
	return file_noghactions_proto_rawDescGZIP(), []int{5}
}

func (x *TransferActionOutput) GetToken() *Token {
	if x != nil {
		return x.Token
	}
	return nil
}

type Proof struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Proof         []byte                 `protobuf:"bytes,1,opt,name=proof,proto3" json:"proof,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Proof) Reset() {
	*x = Proof{}
	mi := &file_noghactions_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Proof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proof) ProtoMessage() {}

func (x *Proof) ProtoReflect() protoreflect.Message {
	mi := &file_noghactions_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proof.ProtoReflect.Descriptor instead.
func (*Proof) Descriptor() ([]byte, []int) {
	return file_noghactions_proto_rawDescGZIP(), []int{6}
}

func (x *Proof) GetProof() []byte {
	if x != nil {
		return x.Proof
	}
	return nil
}

type TransferAction struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Version       uint64                  `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Inputs        []*TransferActionInput  `protobuf:"bytes,2,rep,name=inputs,proto3" json:"inputs,omitempty"`                                                                               // inputs
	Outputs       []*TransferActionOutput `protobuf:"bytes,3,rep,name=outputs,proto3" json:"outputs,omitempty"`                                                                             // outputs
	Proof         *Proof                  `protobuf:"bytes,4,opt,name=proof,proto3" json:"proof,omitempty"`                                                                                 // ZK Proof that shows that the transfer is correct
	Metadata      map[string][]byte       `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Metadata contains the transfer action's metadata
	Issuer        *pp.Identity            `protobuf:"bytes,6,opt,name=issuer,proto3" json:"issuer,omitempty"`                                                                               // Issuer to sign the transfer action in redeem case
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferAction) Reset() {
	*x = TransferAction{}
	mi := &file_noghactions_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferAction) ProtoMessage() {}

func (x *TransferAction) ProtoReflect() protoreflect.Message {
	mi := &file_noghactions_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferAction.ProtoReflect.Descriptor instead.
func (*TransferAction) Descriptor() ([]byte, []int) {
	return file_noghactions_proto_rawDescGZIP(), []int{7}
}

func (x *TransferAction) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *TransferAction) GetInputs() []*TransferActionInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *TransferAction) GetOutputs() []*TransferActionOutput {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *TransferAction) GetProof() *Proof {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *TransferAction) GetMetadata() map[string][]byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TransferAction) GetIssuer() *pp.Identity {
	if x != nil {
		return x.Issuer
	}
	return nil
}

type IssueActionInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *TokenID               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`       // is the token id of the token to be redeemed
	Token         []byte                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"` // is the actual token to be redeemed
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssueActionInput) Reset() {
	*x = IssueActionInput{}
	mi := &file_noghactions_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssueActionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueActionInput) ProtoMessage() {}

func (x *IssueActionInput) ProtoReflect() protoreflect.Message {
	mi := &file_noghactions_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueActionInput.ProtoReflect.Descriptor instead.
func (*IssueActionInput) Descriptor() ([]byte, []int) {
	return file_noghactions_proto_rawDescGZIP(), []int{8}
}

func (x *IssueActionInput) GetId() *TokenID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *IssueActionInput) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type IssueActionOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         *Token                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` // is the newly issued token
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssueActionOutput) Reset() {
	*x = IssueActionOutput{}
	mi := &file_noghactions_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssueActionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueActionOutput) ProtoMessage() {}

func (x *IssueActionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_noghactions_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueActionOutput.ProtoReflect.Descriptor instead.
func (*IssueActionOutput) Descriptor() ([]byte, []int) {
	return file_noghactions_proto_rawDescGZIP(), []int{9}
}

func (x *IssueActionOutput) GetToken() *Token {
	if x != nil {
		return x.Token
	}
	return nil
}

type IssueAction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       uint64                 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Issuer        *pp.Identity           `protobuf:"bytes,2,opt,name=issuer,proto3" json:"issuer,omitempty"`                                                                               // is the identity of issuer
	Inputs        []*IssueActionInput    `protobuf:"bytes,3,rep,name=inputs,proto3" json:"inputs,omitempty"`                                                                               // are the tokens to be redeemed by this issue action
	Outputs       []*IssueActionOutput   `protobuf:"bytes,4,rep,name=outputs,proto3" json:"outputs,omitempty"`                                                                             // are the newly issued tokens
	Proof         *Proof                 `protobuf:"bytes,5,opt,name=proof,proto3" json:"proof,omitempty"`                                                                                 // carries the ZKP of IssueAction validity
	Metadata      map[string][]byte      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Metadata of the issue action
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssueAction) Reset() {
	*x = IssueAction{}
	mi := &file_noghactions_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssueAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueAction) ProtoMessage() {}

func (x *IssueAction) ProtoReflect() protoreflect.Message {
	mi := &file_noghactions_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueAction.ProtoReflect.Descriptor instead.
func (*IssueAction) Descriptor() ([]byte, []int) {
	return file_noghactions_proto_rawDescGZIP(), []int{10}
}

func (x *IssueAction) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *IssueAction) GetIssuer() *pp.Identity {
	if x != nil {
		return x.Issuer
	}
	return nil
}

func (x *IssueAction) GetInputs() []*IssueActionInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *IssueAction) GetOutputs() []*IssueActionOutput {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *IssueAction) GetProof() *Proof {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *IssueAction) GetMetadata() map[string][]byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_noghactions_proto protoreflect.FileDescriptor

const file_noghactions_proto_rawDesc = "" +
	"\n" +
	"\x11noghactions.proto\x12\x04nogh\x1a\x0enoghmath.proto\x1a\x0fftactions.proto\x1a\fnoghpp.proto\";\n" +
	"\x05Token\x12\x14\n" +
	"\x05owner\x18\x01 \x01(\fR\x05owner\x12\x1c\n" +
	"\x04data\x18\x02 \x01(\v2\b.nogh.G1R\x04data\"\x9e\x01\n" +
	"\rTokenMetadata\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x1e\n" +
	"\x05value\x18\x02 \x01(\v2\b.nogh.ZrR\x05value\x121\n" +
	"\x0fblinding_factor\x18\x03 \x01(\v2\b.nogh.ZrR\x0eblindingFactor\x12&\n" +
	"\x06issuer\x18\x04 \x01(\v2\x0e.nogh.IdentityR\x06issuer\"/\n" +
	"\aTokenID\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05index\x18\x02 \x01(\x04R\x05index\"\xb4\x01\n" +
	"\x13TransferActionInput\x12(\n" +
	"\btoken_id\x18\x01 \x01(\v2\r.nogh.TokenIDR\atokenId\x12!\n" +
	"\x05input\x18\x02 \x01(\v2\v.nogh.TokenR\x05input\x12P\n" +
	"\x0fupgrade_witness\x18\x03 \x01(\v2'.nogh.TransferActionInputUpgradeWitnessR\x0eupgradeWitness\"\x7f\n" +
	"!TransferActionInputUpgradeWitness\x12'\n" +
	"\x06output\x18\x01 \x01(\v2\x0f.fabtoken.TokenR\x06output\x121\n" +
	"\x0fblinding_factor\x18\x02 \x01(\v2\b.nogh.ZrR\x0eblindingFactor\"9\n" +
	"\x14TransferActionOutput\x12!\n" +
	"\x05token\x18\x01 \x01(\v2\v.nogh.TokenR\x05token\"\x1d\n" +
	"\x05Proof\x12\x14\n" +
	"\x05proof\x18\x01 \x01(\fR\x05proof\"\xdb\x02\n" +
	"\x0eTransferAction\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x04R\aversion\x121\n" +
	"\x06inputs\x18\x02 \x03(\v2\x19.nogh.TransferActionInputR\x06inputs\x124\n" +
	"\aoutputs\x18\x03 \x03(\v2\x1a.nogh.TransferActionOutputR\aoutputs\x12!\n" +
	"\x05proof\x18\x04 \x01(\v2\v.nogh.ProofR\x05proof\x12>\n" +
	"\bmetadata\x18\x05 \x03(\v2\".nogh.TransferAction.MetadataEntryR\bmetadata\x12&\n" +
	"\x06issuer\x18\x06 \x01(\v2\x0e.nogh.IdentityR\x06issuer\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"G\n" +
	"\x10IssueActionInput\x12\x1d\n" +
	"\x02id\x18\x01 \x01(\v2\r.nogh.TokenIDR\x02id\x12\x14\n" +
	"\x05token\x18\x02 \x01(\fR\x05token\"6\n" +
	"\x11IssueActionOutput\x12!\n" +
	"\x05token\x18\x01 \x01(\v2\v.nogh.TokenR\x05token\"\xcf\x02\n" +
	"\vIssueAction\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x04R\aversion\x12&\n" +
	"\x06issuer\x18\x02 \x01(\v2\x0e.nogh.IdentityR\x06issuer\x12.\n" +
	"\x06inputs\x18\x03 \x03(\v2\x16.nogh.IssueActionInputR\x06inputs\x121\n" +
	"\aoutputs\x18\x04 \x03(\v2\x17.nogh.IssueActionOutputR\aoutputs\x12!\n" +
	"\x05proof\x18\x05 \x01(\v2\v.nogh.ProofR\x05proof\x12;\n" +
	"\bmetadata\x18\x06 \x03(\v2\x1f.nogh.IssueAction.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01BYZWgithub.com/hyperledger-labs/fabric-token-sdk/token/core/zkatdlog/nogh/protos-go/actionsb\x06proto3"

var (
	file_noghactions_proto_rawDescOnce sync.Once
	file_noghactions_proto_rawDescData []byte
)

func file_noghactions_proto_rawDescGZIP() []byte {
	file_noghactions_proto_rawDescOnce.Do(func() {
		file_noghactions_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_noghactions_proto_rawDesc), len(file_noghactions_proto_rawDesc)))
	})
	return file_noghactions_proto_rawDescData
}

var file_noghactions_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_noghactions_proto_goTypes = []any{
	(*Token)(nil),                             // 0: nogh.Token
	(*TokenMetadata)(nil),                     // 1: nogh.TokenMetadata
	(*TokenID)(nil),                           // 2: nogh.TokenID
	(*TransferActionInput)(nil),               // 3: nogh.TransferActionInput
	(*TransferActionInputUpgradeWitness)(nil), // 4: nogh.TransferActionInputUpgradeWitness
	(*TransferActionOutput)(nil),              // 5: nogh.TransferActionOutput
	(*Proof)(nil),                             // 6: nogh.Proof
	(*TransferAction)(nil),                    // 7: nogh.TransferAction
	(*IssueActionInput)(nil),                  // 8: nogh.IssueActionInput
	(*IssueActionOutput)(nil),                 // 9: nogh.IssueActionOutput
	(*IssueAction)(nil),                       // 10: nogh.IssueAction
	nil,                                       // 11: nogh.TransferAction.MetadataEntry
	nil,                                       // 12: nogh.IssueAction.MetadataEntry
	(*math.G1)(nil),                           // 13: nogh.G1
	(*math.Zr)(nil),                           // 14: nogh.Zr
	(*pp.Identity)(nil),                       // 15: nogh.Identity
	(*actions.Token)(nil),                     // 16: fabtoken.Token
}
var file_noghactions_proto_depIdxs = []int32{
	13, // 0: nogh.Token.data:type_name -> nogh.G1
	14, // 1: nogh.TokenMetadata.value:type_name -> nogh.Zr
	14, // 2: nogh.TokenMetadata.blinding_factor:type_name -> nogh.Zr
	15, // 3: nogh.TokenMetadata.issuer:type_name -> nogh.Identity
	2,  // 4: nogh.TransferActionInput.token_id:type_name -> nogh.TokenID
	0,  // 5: nogh.TransferActionInput.input:type_name -> nogh.Token
	4,  // 6: nogh.TransferActionInput.upgrade_witness:type_name -> nogh.TransferActionInputUpgradeWitness
	16, // 7: nogh.TransferActionInputUpgradeWitness.output:type_name -> fabtoken.Token
	14, // 8: nogh.TransferActionInputUpgradeWitness.blinding_factor:type_name -> nogh.Zr
	0,  // 9: nogh.TransferActionOutput.token:type_name -> nogh.Token
	3,  // 10: nogh.TransferAction.inputs:type_name -> nogh.TransferActionInput
	5,  // 11: nogh.TransferAction.outputs:type_name -> nogh.TransferActionOutput
	6,  // 12: nogh.TransferAction.proof:type_name -> nogh.Proof
	11, // 13: nogh.TransferAction.metadata:type_name -> nogh.TransferAction.MetadataEntry
	15, // 14: nogh.TransferAction.issuer:type_name -> nogh.Identity
	2,  // 15: nogh.IssueActionInput.id:type_name -> nogh.TokenID
	0,  // 16: nogh.IssueActionOutput.token:type_name -> nogh.Token
	15, // 17: nogh.IssueAction.issuer:type_name -> nogh.Identity
	8,  // 18: nogh.IssueAction.inputs:type_name -> nogh.IssueActionInput
	9,  // 19: nogh.IssueAction.outputs:type_name -> nogh.IssueActionOutput
	6,  // 20: nogh.IssueAction.proof:type_name -> nogh.Proof
	12, // 21: nogh.IssueAction.metadata:type_name -> nogh.IssueAction.MetadataEntry
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_noghactions_proto_init() }
func file_noghactions_proto_init() {
	if File_noghactions_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_noghactions_proto_rawDesc), len(file_noghactions_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_noghactions_proto_goTypes,
		DependencyIndexes: file_noghactions_proto_depIdxs,
		MessageInfos:      file_noghactions_proto_msgTypes,
	}.Build()
	File_noghactions_proto = out.File
	file_noghactions_proto_goTypes = nil
	file_noghactions_proto_depIdxs = nil
}
