//
//Copyright IBM Corp. All Rights Reserved.
//
//SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.28.1
// source: ftpp.proto

package actions

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Identity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Raw []byte `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
}

func (x *Identity) Reset() {
	*x = Identity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ftpp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_ftpp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_ftpp_proto_rawDescGZIP(), []int{0}
}

func (x *Identity) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

// PublicParameters describes typed public parameters
type PublicParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier        string      `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`                                          // the identifier of the public parameters
	Version           uint64      `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`                                               // the version of these public params
	Auditor           *Identity   `protobuf:"bytes,7,opt,name=auditor,proto3" json:"auditor,omitempty"`                                                // is the public key of the auditor.
	Issuers           []*Identity `protobuf:"bytes,8,rep,name=issuers,proto3" json:"issuers,omitempty"`                                                // is a list of public keys of the entities that can issue tokens.
	MaxToken          uint64      `protobuf:"varint,9,opt,name=max_token,json=maxToken,proto3" json:"max_token,omitempty"`                             // is the maximum quantity a token can hold
	QuantityPrecision uint64      `protobuf:"varint,10,opt,name=quantity_precision,json=quantityPrecision,proto3" json:"quantity_precision,omitempty"` // is the precision used to represent quantities
}

func (x *PublicParameters) Reset() {
	*x = PublicParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ftpp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicParameters) ProtoMessage() {}

func (x *PublicParameters) ProtoReflect() protoreflect.Message {
	mi := &file_ftpp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicParameters.ProtoReflect.Descriptor instead.
func (*PublicParameters) Descriptor() ([]byte, []int) {
	return file_ftpp_proto_rawDescGZIP(), []int{1}
}

func (x *PublicParameters) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *PublicParameters) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *PublicParameters) GetAuditor() *Identity {
	if x != nil {
		return x.Auditor
	}
	return nil
}

func (x *PublicParameters) GetIssuers() []*Identity {
	if x != nil {
		return x.Issuers
	}
	return nil
}

func (x *PublicParameters) GetMaxToken() uint64 {
	if x != nil {
		return x.MaxToken
	}
	return 0
}

func (x *PublicParameters) GetQuantityPrecision() uint64 {
	if x != nil {
		return x.QuantityPrecision
	}
	return 0
}

var File_ftpp_proto protoreflect.FileDescriptor

var file_ftpp_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x66, 0x74, 0x70, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x66, 0x61,
	0x62, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x1c, 0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x72, 0x61, 0x77, 0x22, 0xf4, 0x01, 0x0a, 0x10, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x07, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x61, 0x62, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x12, 0x2c, 0x0a, 0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x61, 0x62, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2d, 0x0a, 0x12,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x54, 0x5a, 0x52, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x66, 0x61, 0x62, 0x72, 0x69,
	0x63, 0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x66, 0x61, 0x62, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2d, 0x67, 0x6f, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ftpp_proto_rawDescOnce sync.Once
	file_ftpp_proto_rawDescData = file_ftpp_proto_rawDesc
)

func file_ftpp_proto_rawDescGZIP() []byte {
	file_ftpp_proto_rawDescOnce.Do(func() {
		file_ftpp_proto_rawDescData = protoimpl.X.CompressGZIP(file_ftpp_proto_rawDescData)
	})
	return file_ftpp_proto_rawDescData
}

var file_ftpp_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ftpp_proto_goTypes = []interface{}{
	(*Identity)(nil),         // 0: fabtoken.Identity
	(*PublicParameters)(nil), // 1: fabtoken.PublicParameters
}
var file_ftpp_proto_depIdxs = []int32{
	0, // 0: fabtoken.PublicParameters.auditor:type_name -> fabtoken.Identity
	0, // 1: fabtoken.PublicParameters.issuers:type_name -> fabtoken.Identity
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_ftpp_proto_init() }
func file_ftpp_proto_init() {
	if File_ftpp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ftpp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ftpp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ftpp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ftpp_proto_goTypes,
		DependencyIndexes: file_ftpp_proto_depIdxs,
		MessageInfos:      file_ftpp_proto_msgTypes,
	}.Build()
	File_ftpp_proto = out.File
	file_ftpp_proto_rawDesc = nil
	file_ftpp_proto_goTypes = nil
	file_ftpp_proto_depIdxs = nil
}
